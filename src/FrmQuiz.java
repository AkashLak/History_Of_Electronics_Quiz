/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author akash
 */

import java.util.Scanner;
public class FrmQuiz extends javax.swing.JFrame {
    Scanner keyedInput = new Scanner(System.in);
    
    //declaring final values for Total Quest Count and Correct options for all Quiz questions in the form of String
    final int TOTAL_QUEST_COUNT = 8;
    final String CORR_ANSWER = "CACBDDAB";
    
    //declaring variables to store the counter values for tracking Total Questions, Correct Answers, Incorrect Answers, Percentage calculation, User-Flag for input validation
    int Quest_Counter = 0;
    int Corr_Ans_Count = 0;
    int Incorr_Ans_Count = 0;
    double Stats_Corr_Ans_Perc = 0;
    double Stats_Incorr_Ans_Perc = 0;
    String User_Flag = "N";
    String Stats_Flag = "N";
    String Final_Option;
    String User_Input_Option;
    String Correct_Answer = "";

    /**
     * Creates new form FrmQuiz
     */
    public FrmQuiz() {
        initComponents();
        // Calling QuizInit procedure, to initialize all labels, buttons, statistical labels and setting the 1st Quiz question
        QuizInit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblInstruction1 = new javax.swing.JLabel();
        lblQuest = new javax.swing.JLabel();
        lblOption1 = new javax.swing.JLabel();
        lblOption2 = new javax.swing.JLabel();
        txtUserAns = new javax.swing.JTextField();
        lblUserAnsDesc = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        btnNextQuest = new javax.swing.JButton();
        lblAnswerResp = new javax.swing.JLabel();
        lblCorrAns = new javax.swing.JLabel();
        lblProgressDesc = new javax.swing.JLabel();
        lbldummyline1 = new javax.swing.JLabel();
        lblOption3 = new javax.swing.JLabel();
        lblOption4 = new javax.swing.JLabel();
        lblStatsTotQueDesc = new javax.swing.JLabel();
        lblStatsCorrAnsDesc = new javax.swing.JLabel();
        lblStatsIncorrAnsDesc = new javax.swing.JLabel();
        lblStatsTotQue = new javax.swing.JLabel();
        lblStatsCorrAns = new javax.swing.JLabel();
        lblStatsIncorrAns = new javax.swing.JLabel();
        lblStatsTotQuePerc = new javax.swing.JLabel();
        lblStatsCorrAnsPerc = new javax.swing.JLabel();
        lblStatsIncorrAnsPerc = new javax.swing.JLabel();
        lblProgress = new javax.swing.JLabel();
        lblQuestionDesc = new javax.swing.JLabel();
        lblQuestionNumber = new javax.swing.JLabel();
        lblFinalPassFail = new javax.swing.JLabel();
        lblInstruction2 = new javax.swing.JLabel();
        lblLogo = new javax.swing.JLabel();
        lblInstruction = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTitle.setText("History of Electronics");

        lblInstruction1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        lblInstruction1.setText("1)    Passing score is 75% (6 out of 8) and Distinction is 85% (7 out of 8)");

        lblQuest.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblQuest.setText("Question");

        lblOption1.setText("Option 1");

        lblOption2.setText("Option 2");

        lblUserAnsDesc.setText("Your Answer is   :");

        btnSubmit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSubmit.setText("SUBMIT");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnNextQuest.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnNextQuest.setText("NEXT QUESTION");
        btnNextQuest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextQuestActionPerformed(evt);
            }
        });

        lblAnswerResp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblAnswerResp.setForeground(new java.awt.Color(255, 0, 0));
        lblAnswerResp.setText("Answer Validation Response");

        lblCorrAns.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblCorrAns.setForeground(new java.awt.Color(0, 0, 255));
        lblCorrAns.setText("Correct Answer");

        lblProgressDesc.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        lblProgressDesc.setText("Your Score : ");

        lbldummyline1.setText("********************************************************************************");

        lblOption3.setText("Option 3");

        lblOption4.setText("Option 4");

        lblStatsTotQueDesc.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblStatsTotQueDesc.setText("Total Number of Questions                            :");

        lblStatsCorrAnsDesc.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblStatsCorrAnsDesc.setText("Total Number of Correct Answers                  :");

        lblStatsIncorrAnsDesc.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblStatsIncorrAnsDesc.setText("Total Number of In-Correct Answers              :");

        lblStatsTotQue.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblStatsTotQue.setForeground(new java.awt.Color(0, 0, 204));
        lblStatsTotQue.setText(" ");

        lblStatsCorrAns.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblStatsCorrAns.setForeground(new java.awt.Color(0, 0, 255));
        lblStatsCorrAns.setText(" ");

        lblStatsIncorrAns.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblStatsIncorrAns.setForeground(new java.awt.Color(0, 0, 255));
        lblStatsIncorrAns.setText(" ");

        lblStatsTotQuePerc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblStatsTotQuePerc.setForeground(new java.awt.Color(255, 0, 0));
        lblStatsTotQuePerc.setText(" ");

        lblStatsCorrAnsPerc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblStatsCorrAnsPerc.setForeground(new java.awt.Color(255, 0, 0));
        lblStatsCorrAnsPerc.setText(" ");

        lblStatsIncorrAnsPerc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblStatsIncorrAnsPerc.setForeground(new java.awt.Color(255, 0, 0));
        lblStatsIncorrAnsPerc.setText(" ");

        lblProgress.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblProgress.setForeground(new java.awt.Color(0, 0, 255));
        lblProgress.setText(" ");

        lblQuestionDesc.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        lblQuestionDesc.setForeground(new java.awt.Color(255, 0, 0));
        lblQuestionDesc.setText("Question   : ");

        lblQuestionNumber.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        lblQuestionNumber.setForeground(new java.awt.Color(255, 0, 0));
        lblQuestionNumber.setText(" ");

        lblFinalPassFail.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        lblFinalPassFail.setForeground(new java.awt.Color(0, 0, 255));
        lblFinalPassFail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFinalPassFail.setText("FINAL RESULT");

        lblInstruction2.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        lblInstruction2.setText("2)    Final Statistics available after completing all the Questions");

        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Quiz_Logo.png"))); // NOI18N

        lblInstruction.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblInstruction.setForeground(new java.awt.Color(0, 0, 255));
        lblInstruction.setText("Read the following instructions : ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(253, 253, 253)
                        .addComponent(lblQuestionDesc)
                        .addGap(18, 18, 18)
                        .addComponent(lblQuestionNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(lblLogo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(422, 422, 422)
                                .addComponent(lblProgressDesc))
                            .addComponent(lbldummyline1, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblStatsCorrAnsDesc)
                                    .addComponent(lblStatsTotQueDesc)
                                    .addComponent(lblStatsIncorrAnsDesc))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblStatsCorrAns, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblStatsIncorrAns, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblStatsTotQue, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblStatsTotQuePerc, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lblStatsCorrAnsPerc, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                                        .addComponent(lblStatsIncorrAnsPerc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGap(35, 35, 35)
                        .addComponent(lblProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblOption2, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblOption1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblOption3, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblOption4, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblAnswerResp, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                                .addComponent(lblCorrAns, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSubmit)
                                .addGap(44, 44, 44)
                                .addComponent(btnNextQuest))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(lblFinalPassFail, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblUserAnsDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtUserAns, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblQuest, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblInstruction2, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblInstruction1, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblInstruction, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLogo)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(lblTitle)))
                .addGap(24, 24, 24)
                .addComponent(lblInstruction)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblInstruction1)
                .addGap(10, 10, 10)
                .addComponent(lblInstruction2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProgressDesc)
                    .addComponent(lblProgress))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuestionDesc)
                    .addComponent(lblQuestionNumber))
                .addGap(18, 18, 18)
                .addComponent(lblQuest)
                .addGap(27, 27, 27)
                .addComponent(lblOption1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblOption2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblOption3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblOption4)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUserAnsDesc)
                    .addComponent(txtUserAns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit)
                    .addComponent(btnNextQuest))
                .addGap(18, 18, 18)
                .addComponent(lblAnswerResp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCorrAns)
                .addGap(32, 32, 32)
                .addComponent(lblFinalPassFail)
                .addGap(18, 18, 18)
                .addComponent(lbldummyline1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStatsTotQueDesc)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblStatsTotQue)
                        .addComponent(lblStatsTotQuePerc)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStatsCorrAnsDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStatsCorrAns)
                    .addComponent(lblStatsCorrAnsPerc))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStatsIncorrAns)
                    .addComponent(lblStatsIncorrAnsPerc)
                    .addComponent(lblStatsIncorrAnsDesc))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        //Converting the User Input Option to UpperCase
        User_Input_Option = txtUserAns.getText().toUpperCase();
        
        //Validate User Input on Answers and setting the Flag accordingly. Valid input values are A, B, C, D or blank.
        if ((User_Input_Option.matches ("A|B|C|D")) || (User_Input_Option.equals ("")))
        {
            User_Flag = "Y";
        }
        else
        {
            User_Flag = "N";
            lblAnswerResp.setText("BAD Input. Either you can skip the question or choose the right option");
            txtUserAns.setText("");
        }

        //Checking User Input Option against the Correct Answer for the Quiz question and display the Response accordingly. Appropriate counter value would be incremented.
        if (User_Flag == "Y")
        {
            Final_Option = String.valueOf(CORR_ANSWER.charAt(Quest_Counter-1));
  
            if (User_Input_Option.equals (Final_Option))
            {
                lblAnswerResp.setText("Correct Answer.  Proceed....");
                Corr_Ans_Count = Corr_Ans_Count + 1;
            }
            else
            {
                lblAnswerResp.setText("Wrong Answer.  Proceed....");
                lblCorrAns.setText(Correct_Answer);
                Incorr_Ans_Count = Incorr_Ans_Count + 1;
            }
            lblProgress.setText(Corr_Ans_Count + " of  " + Quest_Counter);
            Quest_Counter = Quest_Counter + 1;
            if (Quest_Counter <= TOTAL_QUEST_COUNT)
            {
                btnSubmit.setText("");
                btnNextQuest.setText("NEXT QUESTION");
            }
            else
            {
                btnSubmit.setText("");
                btnNextQuest.setText("STATISTICS");
            }
        }  
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnNextQuestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextQuestActionPerformed
        // TODO add your handling code here:
        
        // Check the Quiz Question count and if less than or equal to Total Questions, proceed with Next Quiz Question. If not, proceed with Statistics.
        if (Quest_Counter <= TOTAL_QUEST_COUNT)
        { 
            lblQuestionNumber.setText(Quest_Counter + " of  " + TOTAL_QUEST_COUNT);
            // As per the Quiz Question Counter, display the appropriate Questions and options
            if (Quest_Counter == 2)
            {
                lblQuest.setText(Quest_Counter + ")  When was the World Wide Web publically introduced in? : ");
                lblOption1.setText("A)  1993");
                lblOption2.setText("B)  1996");
                lblOption3.setText("C)  1965");
                lblOption4.setText("D)  1973");
                lblUserAnsDesc.setText("Your Answer is       :  ");
                txtUserAns.setText("");
                btnSubmit.setText("SUBMIT");
                btnNextQuest.setText("");
                lblAnswerResp.setText("");
                lblCorrAns.setText("");
                lbldummyline1.setText("");
                Correct_Answer = "World Wide Web (WWW) was publically introduced in 1993.";
            }
            else if (Quest_Counter == 3)
            {
                lblQuest.setText(Quest_Counter + ")  Which company developed the first mobile phone? : ");
                lblOption1.setText("A)  Blackberry");
                lblOption2.setText("B)  Apple");
                lblOption3.setText("C)  Motorola");
                lblOption4.setText("D)  Blueberry");
                lblUserAnsDesc.setText("Your Answer is       :  ");
                txtUserAns.setText("");
                btnSubmit.setText("SUBMIT");
                btnNextQuest.setText("");
                lblAnswerResp.setText("");
                lblCorrAns.setText("");
                lbldummyline1.setText(""); 
                Correct_Answer = "Motorola developed the first mobile phone in year 1984.";
            }
            else if (Quest_Counter == 4)
            {
                lblQuest.setText(Quest_Counter + ")  What was the name for the first operating system? : ");
                lblOption1.setText("A)  Windows");
                lblOption2.setText("B)  GM-NAA I/O");
                lblOption3.setText("C)  Linux");
                lblOption4.setText("D)  Unix");
                lblUserAnsDesc.setText("Your Answer is       :  ");
                txtUserAns.setText("");
                btnSubmit.setText("SUBMIT");
                btnNextQuest.setText("");
                lblAnswerResp.setText("");
                lblCorrAns.setText("");
                lbldummyline1.setText(""); 
                Correct_Answer = "The first Operating system in the world was GM-NAA I/O Operating System";
            } 
            else if (Quest_Counter == 5)
            {
                lblQuest.setText(Quest_Counter + ")  When was the first network email sent? : ");
                lblOption1.setText("A)  1965");
                lblOption2.setText("B)  1980");
                lblOption3.setText("C)  1963");
                lblOption4.setText("D)  1971");
                lblUserAnsDesc.setText("Your Answer is       :  ");
                txtUserAns.setText("");
                btnSubmit.setText("SUBMIT");
                btnNextQuest.setText("");
                lblAnswerResp.setText("");
                lblCorrAns.setText("");
                lbldummyline1.setText("");
                Correct_Answer = "The first network email was sent by Ray Tomlinson in 1971";
            } 
            else if (Quest_Counter == 6)
            {
                lblQuest.setText(Quest_Counter + ")  What does SMS stand for? : ");
                lblOption1.setText("A)  Multimedia Messaging Service");
                lblOption2.setText("B)  Shiny Message Service");
                lblOption3.setText("C)  Short Message Server");
                lblOption4.setText("D)  Short Message Service");
                lblUserAnsDesc.setText("Your Answer is       :  ");
                txtUserAns.setText("");
                btnSubmit.setText("SUBMIT");
                btnNextQuest.setText("");
                lblAnswerResp.setText("");
                lblCorrAns.setText("");
                lbldummyline1.setText("");
                Correct_Answer = "SMS stands for Short Message Service";
            } 
            else if (Quest_Counter == 7)
            {
                lblQuest.setText(Quest_Counter + ")  What does A.I. stand for? : ");
                lblOption1.setText("A)  Artificial Intelligence");
                lblOption2.setText("B)  Animal Ideologies");
                lblOption3.setText("C)  Area Invasion");
                lblOption4.setText("D)  Artificial insemination");
                lblUserAnsDesc.setText("Your Answer is       :  ");
                txtUserAns.setText("");
                btnSubmit.setText("SUBMIT");
                btnNextQuest.setText("");
                lblAnswerResp.setText("");
                lblCorrAns.setText("");
                lbldummyline1.setText(""); 
                Correct_Answer = "A.I. stands for Artificial Intelligence";
            } 
            else if (Quest_Counter == 8)
            {
                lblQuest.setText(Quest_Counter + ")  In terms of computers/computing, what does ROM stand for? : ");
                lblOption1.setText("A)  Random-access memory");
                lblOption2.setText("B)  Read-only memory");
                lblOption3.setText("C)  Royal Ontario Museum");
                lblOption4.setText("D)  Reverse-only memory");
                lblUserAnsDesc.setText("Your Answer is       :  ");
                txtUserAns.setText("");
                btnSubmit.setText("SUBMIT");
                btnNextQuest.setText("");
                lblAnswerResp.setText("");
                lblCorrAns.setText("");
                lbldummyline1.setText(""); 
                Correct_Answer = "ROM stands for Read-only memory, which is a type of computer storage";
            }     
        }
        else if (Stats_Flag.equals ("N"))
        {
            //Display Statistics that includes Total Number of Questions, Correct Answers, Incorrect Answers, Percentage calculation for Correct and Incorrect answers
            lblAnswerResp.setText("");
            lblCorrAns.setText("");
            lbldummyline1.setText("***************************************************************************************");
            lblStatsTotQueDesc.setText("Total Number of Questions                     :     ");
            lblStatsCorrAnsDesc.setText("Total Number of Correct Answers           :     ");
            lblStatsIncorrAnsDesc.setText("Total Number of Incorrect Answers        :     ");
            lblStatsTotQue.setText(String.valueOf(TOTAL_QUEST_COUNT));
            lblStatsCorrAns.setText(String.valueOf(Corr_Ans_Count));
            lblStatsIncorrAns.setText(String.valueOf(Incorr_Ans_Count));
            Stats_Corr_Ans_Perc = ((double)Corr_Ans_Count / (double)TOTAL_QUEST_COUNT)*100;
            lblStatsCorrAnsPerc.setText(String.format("%.1f",Stats_Corr_Ans_Perc)+" %");
            Stats_Incorr_Ans_Perc = ((double)Incorr_Ans_Count / (double)TOTAL_QUEST_COUNT)*100;
            lblStatsIncorrAnsPerc.setText(String.format("%.1f",Stats_Incorr_Ans_Perc)+" %");
            
            //Depending upon the percentage of correct answers, decision to be made on Passed / Passed with Distinction / Failed
            if (Stats_Corr_Ans_Perc > 85)
            {
                lblFinalPassFail.setText("CONGRATS. You have PASSED the Quiz with ***** DISTINCTION *****");
            }
            else if (Stats_Corr_Ans_Perc >= 75)
            {
                lblFinalPassFail.setText("CONGRATS. You have PASSED the Quiz");
            }
            else
            {
                lblFinalPassFail.setText("You have FAILED the Quiz. Better Luck next time");
            }
            Stats_Flag = "Y";
            btnNextQuest.setText("RESTART QUIZ");
        }
        else
        {
            //Calling QuizInit procedure, in order to reset all labels, buttons, txt box values, counter variables
            QuizInit();  
        }
    }//GEN-LAST:event_btnNextQuestActionPerformed

    public void QuizInit() {                                               
        // TODO add your handling code here:
        // Initialize all counter variables for Total Questions, Correct Answers, Incorrect Answers and Statistical percentages
        Quest_Counter = 0;
        Corr_Ans_Count = 0;
        Incorr_Ans_Count = 0;
        Stats_Corr_Ans_Perc = 0;
        Stats_Incorr_Ans_Perc = 0;
        Stats_Flag = "N";
        
        // Setting the 1st Quiz question and options
        lblProgress.setText(Corr_Ans_Count + " of  " + Quest_Counter);
        Quest_Counter = 1;
        lblQuestionNumber.setText(Quest_Counter + " of  " + TOTAL_QUEST_COUNT);
        lblQuest.setText(Quest_Counter + ")  What does CPU stand for? : ");
        lblOption1.setText("A)  Careful Processing Unit");
        lblOption2.setText("B)  Contamination Preservation Unity");
        lblOption3.setText("C)  Central Processing Unit");
        lblOption4.setText("D)  Central Processing Ultra");
        lblUserAnsDesc.setText("Your Answer is       :  ");
        btnSubmit.setText("SUBMIT");
        btnNextQuest.setText("");
        lblAnswerResp.setText("");
        lblCorrAns.setText("");
        lblFinalPassFail.setText("");
        lbldummyline1.setText("");
        Correct_Answer = "CPU Stands for Central Processing Unit.";
        txtUserAns.setText("");
        
        // Clear all the statistical labels for Total Questions, Correct Answers, Incorrect Answers, Correct Answer Percentage and Incorrect Answer Percentage
        lblStatsTotQueDesc.setText("");
        lblStatsCorrAnsDesc.setText("");
        lblStatsIncorrAnsDesc.setText("");
        lblStatsTotQue.setText("");
        lblStatsCorrAns.setText("");
        lblStatsIncorrAns.setText("");
        lblStatsCorrAnsPerc.setText("");
        lblStatsIncorrAnsPerc.setText(""); 
    }  
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmQuiz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNextQuest;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel lblAnswerResp;
    private javax.swing.JLabel lblCorrAns;
    private javax.swing.JLabel lblFinalPassFail;
    private javax.swing.JLabel lblInstruction;
    private javax.swing.JLabel lblInstruction1;
    private javax.swing.JLabel lblInstruction2;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblOption1;
    private javax.swing.JLabel lblOption2;
    private javax.swing.JLabel lblOption3;
    private javax.swing.JLabel lblOption4;
    private javax.swing.JLabel lblProgress;
    private javax.swing.JLabel lblProgressDesc;
    private javax.swing.JLabel lblQuest;
    private javax.swing.JLabel lblQuestionDesc;
    private javax.swing.JLabel lblQuestionNumber;
    private javax.swing.JLabel lblStatsCorrAns;
    private javax.swing.JLabel lblStatsCorrAnsDesc;
    private javax.swing.JLabel lblStatsCorrAnsPerc;
    private javax.swing.JLabel lblStatsIncorrAns;
    private javax.swing.JLabel lblStatsIncorrAnsDesc;
    private javax.swing.JLabel lblStatsIncorrAnsPerc;
    private javax.swing.JLabel lblStatsTotQue;
    private javax.swing.JLabel lblStatsTotQueDesc;
    private javax.swing.JLabel lblStatsTotQuePerc;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUserAnsDesc;
    private javax.swing.JLabel lbldummyline1;
    private javax.swing.JTextField txtUserAns;
    // End of variables declaration//GEN-END:variables
}
